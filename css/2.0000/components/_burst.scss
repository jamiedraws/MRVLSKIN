$select: ".burst" !default;

//abstracts
@use "../abstracts/divider-line";

// config
@use "../config/fonts";
@use "../config/colors";

// components
@use "../../../Shared/css/template/shoppingcart/components/burst";

// abstracts
@use "../../../Shared/css/template/base/abstracts/group";

@mixin set-color(
    $background-color: colors.get(base),
    $border-color: $background-color,
    $text-color: currentColor
) {
    background: $background-color;
    border-color: $border-color;
    color: $text-color;
}

@mixin base {
    @include burst.new;

    #{$select} {
        font-size: 1em;
        @include set-color(
            $background-color: transparent,
            $border-color: currentColor
        );

        @content;
    }

    @include accent-color;
    @include value;
}

@mixin accent-color {
    #{$select} {
        &--accent-color {
            @include set-color(
                $background-color: colors.get(accent-gradient),
                $border-color: currentColor,
                $text-color: colors.get(accent-dark)
            );

            box-shadow: inset 0 0 1px 1px #fff;
            text-shadow: 1px 1px #fff;
            text-align: center;

            @content;
        }
    }
}

@mixin value {
    #{$select} {
        &--value {
            font: bold fonts.em(27) / 1 fonts.get(tertiary);

            #{$select} {
                &__text {
                    display: flex;
                    flex-direction: column;

                    font-size: 0.7em;

                    > span {
                        &:first-child {
                            font-size: 1.2em;
                        }

                        &:last-child {
                            font-size: 1em;
                        }
                    }
                }
            }

            @content;
        }
    }
}
