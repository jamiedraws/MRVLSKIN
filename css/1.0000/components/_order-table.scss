@use "sass:map";

$select: ".order-table" !default;

// components
@use "../../../Shared/css/template/shoppingcart/components/chart" with
    ($select: $select);

// abstracts
@use "../../../Shared/css/template/base/abstracts/group";

// utils
@use "../../../Shared/css/template/base/utils/unit-conversion" as convert;

@mixin new {
    @include chart.new;

    #{$select} {
        width: auto;

        th {
            background: black;
            color: white;
        }

        td {
            background: white;
        }

        input {
            font-weight: 400;
            font-size: 1em;
            border: 1px solid currentColor;
            background: white;
            flex: 1;
            display: inline-flex;
            align-items: center;
            min-width: 0;
            padding: 1rem;
            margin: 0;
            appearance: none;
            color: black;
            font-family: inherit;
            -webkit-appearance: none;

            &::placeholder {
                color: #cacaca;
            }
        }

        @content;
    }

    @include state-tax();
}

@mixin convert-to-item-grid {
    @media all and (max-width: map.get(chart.$mq, mobile)) {
        @include item-grid {
            @content;
        }
    }
}

@mixin span-item-grid-row {
    padding: 1em 0;
    margin: 0 1em;
    border-bottom: 1px solid;
    font-weight: bold;
    order: -1;
}

@mixin flex-item-grid-row($label: data-eflex--category-label) {
    display: flex;
    justify-content: space-between;
    padding: 1em;
    font-weight: normal;

    @media all and (min-width: 370px) {
        flex: 1 1 80px;
        flex-direction: column;
        text-align: center;
        justify-content: flex-start;
    }

    &::before {
        content: attr(#{$label});
        font-size: 80%;
        font-style: italic;
        color: gray;
    }
}

@mixin item-grid() {
    @include chart.block-layout;

    #{$select} {
        thead {
            display: none;
        }

        table {
            > *:last-child {
                tr:last-child {
                    border-bottom-width: 1px;
                }
            }

            td:nth-child(1n + 1) {
                padding: 1em;
            }
        }

        tr {
            display: flex;
            flex-wrap: wrap;
            border-style: solid;
            border-width: 1px 1px 0;
            background: white;

            &:nth-child(even) {
                background: #fbfbfb;
            }
        }

        td {
            border: none;
            flex: 1 1 100%;
        }

        tbody {
            td {
                background: none;
            }
        }

        tfoot {
            td {
                flex: 1;

                &:last-child {
                    flex: 0 1 auto;
                }
            }
        }

        @content;
    }
}

@mixin state-tax {
    @media all and (max-width: map.get(chart.$mq, mobile)) {
        #{$select} {
            [for="zc"] {
                display: flex;
                flex-direction: column;
                align-items: flex-start;

                input {
                    flex: 1 1 auto;
                }
            }
        }
    }
}

@mixin order-item {
    #{$select} {
        &--order-item {
            tbody {
                tr:last-child {
                    border-bottom-width: 1px;
                }

                td:first-child {
                    border-bottom: 0;
                    @include group.gutter;
                    display: flex;
                    flex-wrap: nowrap;
                    justify-content: flex-start;
                    padding: 1rem;

                    @media all and (min-width: convert.to-rem(680, $media: true)) {
                        flex: 1 1 20rem;
                    }
                }
            }

            #{$select} {
                &__picture {
                    max-width: 4rem;
                }
            }

            @content;
        }
    }
}
